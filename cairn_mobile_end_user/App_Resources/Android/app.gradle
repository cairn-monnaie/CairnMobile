android { 
    compileSdkVersion 28
  defaultConfig {  
    multiDexEnabled true
    minSdkVersion 18
    targetSdkVersion 28
    versionCode 51
    versionName "1.0.0"
    ndk {
      abiFilters.clear()
    }
  }
  aaptOptions {
    additionalParameters "--no-version-vectors"  
  }  
}

apply from: '../../../App_Resources/Android/dependency-report.gradle'

task printDependencies {
    doLast {
        configurations.compile.allDependencies*.each { Dependency dep ->
            println "${dep.getClass().simpleName}[${dep.getClass().interfaces*.simpleName.join(', ')}] group[$dep.group] name[$dep.name] $dep"
        }
    }
}

task printResolvedFiles {
    doLast {
        def resolved = configurations.compile.resolvedConfiguration
        resolved.firstLevelModuleDependencies.each { ResolvedDependency resolvedDep ->
            resolvedDep.moduleArtifacts.each { println "$it.name - $it.classifier - $it.type: $it.file" }
        }
    }
}
// project.ext.abiCodes = ['armeabi-v7a': 1, 'arm64-v8a': 2, 'x86': 3]

// android.applicationVariants.all { variant ->
//     variant.outputs.each { output ->
//         def baseAbiVersionCode = project.ext.abiCodes.get(output.getFilter("ABI"), 0)
//         if (baseAbiVersionCode != null) {
//             output.versionCodeOverride = baseAbiVersionCode * 10000000 + variant.versionCode
//         }
//     }
// }
// Ignore sourcemaps in release as they will be sent to bugsnap
// android.applicationVariants.all { variant ->
//   if (variant.buildType.name == 'release') {
//       variant.mergeAssets.doLast {
//           println("deleting source map files from variant")
//           delete(fileTree(dir: variant.mergeAssets.outputDir, includes: ['**/*.map']))
//       }
//   }
// }
